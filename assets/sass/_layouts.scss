@use 'vars';

// Two Column
.ys-two-col {
  display: grid;
  gap: vars.$pad-m;

  @include vars.breakpoint(medium) {
    gap: 9%;
    grid-template-columns: 1fr 1fr;
  }

  &--mobile-reversed {
    .ys-col {
      &--first {
        order: 2;
        @include vars.breakpoint(medium) {
          order: 1;
        }
      }

      &--last {
        order: 1;
        @include vars.breakpoint(medium) {
          order: 2;
        }
      }
    }
  }
}

.ys-section {
  max-width: 100%;
  margin: 0;
  position: relative;
  overflow: hidden;
  &--pad-top {
    padding-top: vars.$section-padding-mobile;
    @include vars.breakpoint(medium) {
      padding-top: vars.$section-padding;
    }
  }
  &--margin-top {
    margin-top: vars.$section-padding-mobile;
    @include vars.breakpoint(medium) {
      margin-top: vars.$section-padding;
    }
  }
}

.inner {
  padding: 0;
  margin: 0 auto;
  z-index: 1;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  max-width: 1512px;

  @media (max-width: 768px) {
    padding: 0;
  }
}

.gutter {
  padding-inline: vars.$section-gutter
}


.ys-masonry-grid {
  display: flex;
  flex-wrap: wrap;
  grid-gap: 2rem;
  max-width: 1500px;
  &--col {
    width: 100%;
    height: 20vh;
    @include vars.breakpoint(medium) {
      width: 30%;
      height: 400px;
    }
  }
  a {
    display: block;
    margin-bottom: 2rem;
    width: 100%;
    height: 100%;
    transform: skew(0);
    overflow: hidden;
    position: relative;
    @include vars.breakpoint(medium) {
      display: inline-block;
      transform: skew(vars.$skew);
    }

    img {
      position: relative;
      transform: skew(0);
      object-fit: cover;
      object-position: top;
      width: 100%;
      height: 100%;
      @include vars.breakpoint(medium) {
        height: auto;
        left: 50%;
        top: 50%;
        translate: -50% -50%;
        position: absolute;
        max-width: none;
        transform: skew(vars.$skew-base);
      }
    }

    @include vars.breakpoint(medium) {
      transform: skew(vars.$skew);
    }
  }
}

.skewed-row {
  $gap: 2rem;

  display: flex;
  flex-wrap: wrap;
  gap: $gap;
  align-items: flex-start;
  justify-content: space-between;
  @include vars.breakpoint(medium) {
    transform: skew(vars.$skew);
  }

  .skewed-col {
    h3 {
      font-family: vars.$font-bold-reg;
      @include vars.breakpoint(medium) {
        font-family: vars.$font-bold;
      }
    }
    p {
      font-family: vars.$font-body-reg;
      @include vars.breakpoint(medium) {
        font-family: vars.$font-body;
      }
    }
    @include vars.breakpoint(medium) {
      width: calc(50% - $gap);
    }
    &--first {
      order: 2;
      @include vars.breakpoint(medium) {
        order: 1;
      }
    }
    &--last {
      order: 1;
      @include vars.breakpoint(medium) {
        order: 2;
      }
    }
    img {
      object-fit: cover;
    }
  }
}

.skewed-img-container {
  height: 100%;
  overflow: hidden;
  position: relative;
  img {
    position: relative;
    object-position: top;
    max-width: 100%;
    aspect-ratio: 16/9;

    @include vars.breakpoint(medium) {
      object-position: top;
      max-width: none;
      position: absolute;
      left: -30%;
      transform: skew(vars.$skew-base);
    }

  }
}

